{"version":3,"sources":["imgs/ophelos_logo.png","Login.js","Home.js","App.js","About.js","serviceWorker.js","index.js"],"names":["module","exports","Login","props","login","bind","handleChange","state","email","password","flag","e","preventDefault","fetch","method","headers","body","JSON","stringify","this","then","res","json","console","log","auth","setState","localStorage","setItem","handleSuccessfulAuth","catch","error","target","name","value","className","src","logo","alt","style","width","height","position","type","placeholder","onChange","onClick","color","fontSize","Component","Home","projectCards","hist","history","outcome","Object","keys","map","key","Card","Title","textDecoration","split","Text","display","marginTop","handleObjectChange","apiText","openModal","openHistoryModal","errorInInput","user","dname","phone","dob","address","salary","other","mortgage","rent","utilities","travel","food","loans","creditCards","Modal","setAppElement","parse","getItem","info","response","data","st8","prevSt","statusText","push","window","location","reload","st","clear","h1_style","to","logout","getHistory","historyCard","setNewReportCard","isOpen","onRequestClose","shouldCloseOnOverlayClick","modalStyles","data-dismiss","aria-label","aria-hidden","required","disabled","max","min","float","submit","React","top","right","content","maxHeight","overflow","left","bottom","transform","background","borderRadius","border","transition","padding","withRouter","App","About","textAlign","Boolean","hostname","match","ReactDOM","render","StrictMode","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9a915abd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ophelos_logo.d933d510.png\";","import React, { Component } from 'react';\nimport logo from './imgs/ophelos_logo.png';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.login = this.login.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            flag: 0\n        }\n    }\n\n    login(e) {\n        e.preventDefault();\n        fetch('/api/flaskLogin', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(this.state),\n            })\n            .then(res => res.json())\n            .then(res => {\n                console.log(res.auth);\n                if(res.auth===true){\n                    localStorage.setItem('userData', JSON.stringify(res));\n                    this.props.handleSuccessfulAuth(res);\n                    this.setState({flag: 1});\n                }\n                else {\n                    this.setState({flag: 2});\n                    return false;\n                }\n            })\n            .catch(error => {\n                this.setState({flag: 2});\n                console.log(error); \n            });\n      }\n    \n      handleChange(e) {\n        this.setState({\n          [e.target.name] : e.target.value\n        });\n      }\n\n    render() {\n        return (\n        <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"ophelos_logo\"  style = {{width:500, height:80, position:'inherit'}}/>\n            <p>Please Login.</p>\n            <div><form>\n                <input className=\"loginFields\" type='text' placeholder=\"Email\" name=\"email\" value={this.state.email} onChange={this.handleChange}></input>\n                <input className=\"loginFields\" type='password' placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.handleChange}></input>\n                <button className=\"loginButton\" onClick={this.login}>Login</button>\n                {this.state.flag === 2 && <p style={{color:\"red\", fontSize:16}}>Your login credentials could not be verified, please try again.</p>} \n            </form></div>\n        </header>\n        )\n    }\n}\n\nexport default Login;","import React from 'react';\nimport logo from './imgs/ophelos_logo.png';\nimport './Home.css';\nimport { Link, withRouter } from 'react-router-dom'; \nimport Modal from 'react-modal';\nimport Card from 'react-bootstrap/Card';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleObjectChange=this.handleObjectChange.bind(this);\n        this.state = {\n            apiText: \"\",\n            openModal: false,\n            openHistoryModal: false,\n            errorInInput: false,\n            user: {},\n            history: {},\n            dname: \"\",\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            dob: \"\",\n            address: \"\",\n            salary: \"\",\n            other: \"\",\n            mortgage: \"\",\n            rent: \"\",\n            utilities: \"\",\n            travel: \"\",\n            food: \"\",\n            loans: \"\",\n            creditCards: \"\"\n        }\n    }\n\n    componentDidMount() {\n        Modal.setAppElement('body');\n        this.setState({user: JSON.parse(localStorage.getItem('userData'))});\n        var info = JSON.parse(localStorage.getItem('userData'))\n        fetch('/api/getName', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(info.email),\n        })\n          .then((response) => response.json())\n          .then((data) => this.setState({dname: data.dname}))\n          .catch((e) => {console.log(e);\n        });\n    }\n\n    getHistory(st8) {\n        fetch('/api/getHistory', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(st8),\n            })\n            .then((res) => res.json())\n            .then(data => {\n                this.setState({history: data});\n            })\n    } \n\n    submit(st8, info) {\n        //eslint-disable-next-line\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        var prevSt = JSON.parse(localStorage.getItem('userData'))\n        if(!this.state.dname){\n            st8.email = prevSt.email;\n        }\n        if((!st8.name || !st8.phone || !st8.dob || !st8.address) && !info){\n            this.setState({errorInInput:true});\n            return false;\n        }\n        else{\n            fetch('/api/sendForm', {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json',\n                },\n                body: JSON.stringify(st8),\n                })\n                .then(res => {\n                    if(res.statusText===\"OK\"){\n                        this.props.history.push('/');\n                        window.location.reload();\n                        return true;\n                    }\n                })\n            }\n    }\n\n    setNewReportCard() {\n        var st = this.state.openModal ? false : true;\n        this.setState({openModal: st});\n    }\n\n    historyCard() {\n        var st = this.state.openHistoryModal ? false : true;\n        this.setState({openHistoryModal: st});\n    }\n\n    logout() {\n        localStorage.clear();\n        this.props.history.push('/');\n        window.location.reload();\n    }\n\n    handleObjectChange(e) {\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    projectCards = () => {\n        var hist = this.state.history;\n        if(hist.outcome===\"FAILURE\"){\n            return <div><span style={{width:'500px', fontSize: '18px'}}> Nothing here yet, please complete a form.</span></div>\n        }\n        else{\n            return (\n            Object.keys(hist).map(key => {\n                return (\n                    <Card key={key} className=\"infoCards\">\n                        <Card.Title style={{fontSize: '20px', textDecoration:'underline'}}>{key.split(\"|\")[0]}</Card.Title>\n                        <Card.Text style={{fontSize: '16px', display: 'grid'}}>\n                            <span > Disposable Income: {hist[key][\"di\"]} </span>\n                            <span style={{marginTop: '10px'}}> I&amp;E Rating: {hist[key][\"ieRating\"]} </span>\n                        </Card.Text>\n                    </Card>\n                )})\n            )\n        }\n    }\n\n    render () {\n      return (\n      <div className=\"Home\">\n        <header className=\"App-header\">\n          <h1 style={h1_style}>\n                  <Link to=\"/Home\" style={{color:'inherit', textDecoration:'inherit'}}> Home </Link> |\n                  <Link to=\"/About\" style={{color:'inherit', textDecoration:'inherit'}}> About</Link> |\n                  <button className=\"logoutBtn\" onClick={() => this.logout()}>Logout</button>\n          </h1>\n          <img src={logo} className=\"App-logo\" alt=\"ophelos_logo\"  style = {{width:500, height:80, position:'inherit'}}/>\n          <p> {this.state.dname ? \"Hello \" + this.state.dname + \", welcome to your income and expenditure app!\" : \"Welcome, please start a new report to setup your profile\"} </p>\n          <div>\n            <button className=\"classicButton\" onClick={() => {this.getHistory(this.state); this.historyCard()}}>History</button>\n            <button className=\"classicButton\" onClick={() => this.setNewReportCard()}>New Report</button>\n          </div>\n        </header>\n\n        {/* New Report Modal */}\n        <Modal isOpen={this.state.openModal}\n               onRequestClose={() => this.setNewReportCard()}\n               shouldCloseOnOverlayClick={false}\n               style={modalStyles}>\n            <header>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.setNewReportCard()}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n                <h1>New Report</h1>\n            </header>\n            <div className=\"row\"><form>\n                {this.state.dname ? null :\n                <div className=\"column\">\n                    <h2>Personal Info</h2>\n                    <div className=\"inputItem\"><label>Name<span style={{color:'red'}}>*</span></label><input className=\"inputData\" type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleObjectChange} required></input></div>\n                    <div className=\"inputItem\"><label>Email</label><input className=\"inputData\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleObjectChange} disabled></input></div>\n                    <div className=\"inputItem\"><label>Phone<span style={{color:'red'}}>*</span></label><input className=\"inputData\" type=\"tel\" name=\"phone\" value={this.state.phone} onChange={this.handleObjectChange} required></input></div>\n                    <div className=\"inputItem\"><label>Date of Birth<span style={{color:'red'}}>*</span></label><input className=\"inputData\" type=\"date\" name=\"dob\" value={this.state.dob} onChange={this.handleObjectChange} max='2020-08-20' required></input></div>\n                    <div className=\"inputItem\"><label>Address<span style={{color:'red'}}>*</span></label><input className=\"inputData\" type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleObjectChange} required></input></div>\n                </div>\n                }\n                <div className=\"column\">\n                    <h2>Income</h2>\n                    <div className=\"inputItem\"><label>Salary </label><input className=\"inputData\" type=\"number\" name=\"salary\" value={this.state.salary} onChange={this.handleObjectChange} min=\"0\"></input></div>\n                    <div className=\"inputItem\"><label>Other  </label><input className=\"inputData\" type=\"number\" name=\"other\" value={this.state.other} onChange={this.handleObjectChange} min=\"0\"></input></div>\n\n                    <h2>Debt</h2>\n                    <div className=\"inputItem\"><label>Loans        </label><input className=\"inputData\" type=\"number\" name=\"loans\" value={this.state.loans} onChange={this.handleObjectChange} min=\"0\"></input></div>\n                    <div className=\"inputItem\"><label>Credit cards </label><input className=\"inputData\" type=\"number\" name=\"creditCards\" value={this.state.creditCards} onChange={this.handleObjectChange} min=\"0\"></input></div>\n                </div>\n                <div className=\"column\">\n                    <h2>Expenses</h2>\n                    <div className=\"inputItem\"><label>Mortgage  </label><input className=\"inputData\" type=\"number\" name=\"mortgage\" value={this.state.mortgage} onChange={this.handleObjectChange} min=\"0\"></input></div>\n                    <div className=\"inputItem\"><label>Rent      </label><input className=\"inputData\" type=\"number\" name=\"rent\" value={this.state.rent} onChange={this.handleObjectChange} min=\"0\"></input></div>\n                    <div className=\"inputItem\"><label>Utilities </label><input className=\"inputData\" type=\"number\" name=\"utilities\" value={this.state.utilities} onChange={this.handleObjectChange} min=\"0\"></input></div>\n                    <div className=\"inputItem\"><label>Travel    </label><input className=\"inputData\" type=\"number\" name=\"travel\" value={this.state.travel} onChange={this.handleObjectChange} min=\"0\"></input></div>\n                    <div className=\"inputItem\"><label>Food      </label><input className=\"inputData\" type=\"number\" name=\"food\" value={this.state.food} onChange={this.handleObjectChange} min=\"0\"></input></div>\n                </div>\n            </form></div>\n            <footer>\n                {this.state.errorInInput ?\n                    <span style={{color: 'red', width:'100%', display:'inline-block'}}> One of the fields is wrong or empty, please enter the correct type of input.</span> :\n                    null\n                }\n                <div>\n                    <button className=\"loginButton\" style={{float:'left'}} onClick={() => this.setNewReportCard()} >Close</button>\n                    <button className=\"loginButton\" style={{float:'right'}} onClick={() => this.submit(this.state, this.state.dname)} type=\"submit\">Submit</button>\n                </div>\n            </footer>\n        </Modal>\n\n        {/* History Modal */}\n        <Modal  isOpen={this.state.openHistoryModal}\n                onRequestClose={() => this.historyCard()}\n                shouldCloseOnOverlayClick={false}\n                style={modalStyles}>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.historyCard()}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            {this.projectCards()}\n            <button className=\"loginButton\" style={{float:'left'}} onClick={() => this.historyCard()} >Close</button>\n        </Modal>\n      </div>\n      );\n    }\n  }\n\n  const h1_style = {\n    fontSize : 16,\n    position : 'absolute',\n    top : 10,\n    right : 30,\n    color : 'white',\n    textDecoration : 'none'\n  }\n\n  const modalStyles = {\n    content : {\n      maxHeight: '90%',\n      overflow: 'auto',\n      color: 'white',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)',\n      background: 'linear-gradient(118deg, #2b3a75 19%, #5586d8 79%)',\n      borderRadius: '8px',\n      border: 'none',\n      width: 'fit-content',\n      transition: 'color 0.3s ease-in-out',\n      padding: '20px 20px 20px 50px'\n    }\n  };\n\n  export default withRouter(Home);\n","import React from 'react';\nimport './App.css';\nimport Login from './Login';\nimport Home from './Home';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSuccessfulAuth=this.handleSuccessfulAuth.bind(this);\n    this.state = {\n      user:  {}\n    }\n  }\n\n  handleSuccessfulAuth(res) {\n    this.setState({user: res});\n  }\n\n  componentDidMount() {\n     this.setState({user: JSON.parse(localStorage.getItem('userData'))});\n     console.log(this.state.user);\n   }\n\n  render () {\n    return (\n    <div className=\"App\">\n      {this.state.user && this.state.user.auth===true ? (<Home/>) : (<Login handleSuccessfulAuth={this.handleSuccessfulAuth}/>)}\n    </div>\n    );\n  }\n}\n\nexport default App; ","import React from 'react';\nimport logo from './imgs/ophelos_logo.png';\nimport './About.css';\nimport { Link } from 'react-router-dom';\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div className=\"About\">\n                <header className=\"About-header\">\n                    <h1 style={h1_style}>\n                        <Link to=\"/Home\" style={{color:'inherit', textDecoration:'inherit'}}> Home </Link>\n                    </h1>\n                    <Link to=\"/Home\"><img src={logo} className=\"App-logo\" alt=\"ophelos_logo\"/></Link>\n                    <div style={{textAlign:'left', width:'60%', marginTop:'60px'}}>\n                        <h1 style={{fontSize:'30px'}}>A few notes</h1>\n                        <ul>\n                            <li>The personal info section of a card will appear only when completing the\n                                first report\n                            </li>\n                            <li>The email is assumed to be the same as the login, so it is not asked</li>\n                            <li>If an I&amp;E Rating is less than 0 or more than 100%, it is displayed\n                                as \"Not Available\"\n                            </li>\n                        </ul>\n                        <h1 style={{fontSize:'30px'}}>Technologies</h1>\n                        <ul>\n                            <li>The frontend is built using React.js</li>\n                            <li>The backend is built using Python and is running on a Flask server</li>\n                            <li>The database is a firebase noSQL database</li>\n                        </ul>\n                        <h1 style={{fontSize:'30px'}}> Known Issues </h1>\n                        <ul>\n                            <li>The login token does not expire, this is done on purpose</li>\n                            <li>A SQL database could be better in this case, I was however \n                                very familiar with the integration of firebase</li>\n                            <li>Rendering could be done faster</li>\n                        </ul>\n                        <h1 style={{fontSize:'30px'}}> Improvements (If I were to spend more time on it) </h1>\n                        <ul>\n                            <li>Editing a user's personal details</li>\n                            <li>Showing a summary of a user's expenses when clicking a history item</li>\n                            <li>Being able to choose which month to input to</li>\n                        </ul>\n                    </div>\n                </header>\n            </div>\n        );\n    }\n}\n\nconst h1_style = {\n    fontSize : 16,\n    position : 'absolute',\n    top : 10,\n    right : 30,\n    color : 'white',\n    textDecoration : 'none'\n  }\n\nexport default About;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport About from './About';\nimport Home from './Home';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Route exact path=\"/\" component={App}/>\n      <Route exact path=\"/Home\" component={Home}/>\n      <Route exact path=\"/About\" component={About} />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}